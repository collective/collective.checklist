{"version":3,"file":"svecklist-main.js","sources":["../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/shared/utils.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/constants.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/reactivity/equality.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/errors.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/reactivity/sources.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/constants.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/hydration.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/proxy.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/operations.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/reactivity/effects.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/task.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/shared/errors.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/runtime.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/elements/events.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/reconciler.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/template.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/utils.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/render.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/shared/clone.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/blocks/if.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/blocks/each.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/blocks/svelte-component.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/elements/misc.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/dom/elements/bindings/select.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/client/reactivity/props.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/version.js","../../../../../resources/svecklist/node_modules/.pnpm/svelte@5.0.0-next.225/node_modules/svelte/src/internal/disclose-version.js","../../../../../resources/svecklist/src/lib/utils.js","../../../../../resources/svecklist/src/lib/localStore.svelte.js","../../../../../resources/svecklist/src/lib/components/Checkbox.svelte","../../../../../resources/svecklist/src/lib/components/Textfield.svelte","../../../../../resources/svecklist/src/lib/components/ChecklistDisplay.svelte","../../../../../resources/svecklist/src/lib/components/ChecklistEdit.svelte","../../../../../resources/svecklist/src/lib/components/Checklist.svelte","../../../../../resources/svecklist/src/App.svelte","../../../../../resources/svecklist/src/api.js","../../../../../resources/svecklist/src/main.js"],"sourcesContent":["// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var is_frozen = Object.isFrozen;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const UNOWNED = 1 << 7;\nexport const DISCONNECTED = 1 << 8;\nexport const CLEAN = 1 << 9;\nexport const DIRTY = 1 << 10;\nexport const MAYBE_DIRTY = 1 << 11;\nexport const INERT = 1 << 12;\nexport const DESTROYED = 1 << 13;\nexport const EFFECT_RAN = 1 << 14;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 15;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 16;\nexport const INSPECT_EFFECT = 1 << 17;\nexport const HEAD_EFFECT = 1 << 18;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_checkbox_value\");\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_export\");\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_not_bindable\");\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_changed\");\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_invalid_new\");\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"derived_references_self\");\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"each_key_duplicate\");\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_teardown\");\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_unowned_derived\");\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_orphan\");\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_update_depth_exceeded\");\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"hydration_failed\");\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_legacy_only\");\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_invalid_value\");\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_rest_readonly\");\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"rune_outside_svelte\");\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_prototype_fixed\");\n\t}\n}\n\n/**\n * Updating state inside a derived is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived is forbidden. If the value should not be reactive, declare it without \\`$state\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_mutation\");\n\t}\n}\n\n/**\n * The `this={...}` property of a `<svelte:component>` must be a Svelte component, if defined\n * @returns {never}\n */\nexport function svelte_component_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_component_invalid_this_value\\nThe \\`this={...}\\` property of a \\`<svelte:component>\\` must be a Svelte component, if defined`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"svelte_component_invalid_this_value\");\n\t}\n}","/** @import { Derived, Effect, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tcurrent_component_context,\n\tcurrent_reaction,\n\tnew_deps,\n\tcurrent_effect,\n\tcurrent_untracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_current_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_version,\n\tupdate_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY\n} from '../constants.js';\nimport * as e from '../errors.js';\n\nlet inspect_effects = new Set();\n\n/**\n * @template V\n * @param {V} v\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function source(v) {\n\treturn {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\tversion: 0\n\t};\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value) {\n\tconst s = source(initial_value);\n\ts.equals = safe_equals;\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (current_component_context !== null && current_component_context.l !== null) {\n\t\t(current_component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (current_reaction !== null && is_runes() && (current_reaction.f & DERIVED) !== 0) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tif (!source.equals(value)) {\n\t\tsource.v = value;\n\t\tsource.version = increment_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tcurrent_effect !== null &&\n\t\t\t(current_effect.f & CLEAN) !== 0 &&\n\t\t\t(current_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (new_deps !== null && new_deps.includes(source)) {\n\t\t\t\tset_signal_status(current_effect, DIRTY);\n\t\t\t\tschedule_effect(current_effect);\n\t\t\t} else {\n\t\t\t\tif (current_untracked_writes === null) {\n\t\t\t\t\tset_current_untracked_writes([source]);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent_untracked_writes.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tfor (const effect of inspect_effects) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === current_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next() {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { ProxyMetadata, ProxyStateObject, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, current_component_context, untrack, current_effect } from './runtime.js';\nimport {\n\tarray_prototype,\n\tdefine_property,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tis_frozen,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {ProxyStateObject<T> | T}\n */\nexport function proxy(value, parent = null, prev) {\n\tif (typeof value === 'object' && value != null && !is_frozen(value)) {\n\t\t// If we have an existing proxy, return it...\n\t\tif (STATE_SYMBOL in value) {\n\t\t\tconst metadata = /** @type {ProxyMetadata<T>} */ (value[STATE_SYMBOL]);\n\n\t\t\t// ...unless the proxy belonged to a different object, because\n\t\t\t// someone copied the state symbol using `Reflect.ownKeys(...)`\n\t\t\tif (metadata.t === value || metadata.p === value) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\t// Since original parent relationship gets lost, we need to copy over ancestor owners\n\t\t\t\t\t// into current metadata. The object might still exist on both, so we need to widen it.\n\t\t\t\t\twiden_ownership(metadata, metadata);\n\t\t\t\t\tmetadata.parent = parent;\n\t\t\t\t}\n\n\t\t\t\treturn metadata.p;\n\t\t\t}\n\t\t}\n\n\t\tconst prototype = get_prototype_of(value);\n\n\t\tif (prototype === object_prototype || prototype === array_prototype) {\n\t\t\tconst proxy = new Proxy(value, state_proxy_handler);\n\n\t\t\tdefine_property(value, STATE_SYMBOL, {\n\t\t\t\tvalue: /** @type {ProxyMetadata} */ ({\n\t\t\t\t\ts: new Map(),\n\t\t\t\t\tv: source(0),\n\t\t\t\t\ta: is_array(value),\n\t\t\t\t\tp: proxy,\n\t\t\t\t\tt: value\n\t\t\t\t}),\n\t\t\t\twritable: true,\n\t\t\t\tenumerable: false\n\t\t\t});\n\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvalue[STATE_SYMBOL].parent = parent;\n\n\t\t\t\tif (prev) {\n\t\t\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tconst prev_owners = prev?.v?.[STATE_SYMBOL]?.owners;\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tvalue[STATE_SYMBOL].owners = prev_owners ? new Set(prev_owners) : null;\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tvalue[STATE_SYMBOL].owners =\n\t\t\t\t\t\tparent === null\n\t\t\t\t\t\t\t? current_component_context !== null\n\t\t\t\t\t\t\t\t? new Set([current_component_context.function])\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t: new Set();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn proxy;\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/** @type {ProxyHandler<ProxyStateObject<any>>} */\nconst state_proxy_handler = {\n\tdefineProperty(target, prop, descriptor) {\n\t\tif (descriptor.value) {\n\t\t\t/** @type {ProxyMetadata} */\n\t\t\tconst metadata = target[STATE_SYMBOL];\n\n\t\t\tconst s = metadata.s.get(prop);\n\t\t\tif (s !== undefined) set(s, proxy(descriptor.value, metadata));\n\t\t}\n\n\t\treturn Reflect.defineProperty(target, prop, descriptor);\n\t},\n\n\tdeleteProperty(target, prop) {\n\t\t/** @type {ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tconst s = metadata.s.get(prop);\n\t\tconst is_array = metadata.a;\n\t\tconst boolean = delete target[prop];\n\n\t\t// If we have mutated an array directly, and the deletion\n\t\t// was successful we will also need to update the length\n\t\t// before updating the field or the version. This is to\n\t\t// ensure any effects observing length can execute before\n\t\t// effects that listen to the fields – otherwise they will\n\t\t// operate an an index that no longer exists.\n\t\tif (is_array && boolean) {\n\t\t\tconst ls = metadata.s.get('length');\n\t\t\tconst length = target.length - 1;\n\t\t\tif (ls !== undefined && ls.v !== length) {\n\t\t\t\tset(ls, length);\n\t\t\t}\n\t\t}\n\t\tif (s !== undefined) set(s, UNINITIALIZED);\n\n\t\tif (boolean) {\n\t\t\tupdate_version(metadata.v);\n\t\t}\n\n\t\treturn boolean;\n\t},\n\n\tget(target, prop, receiver) {\n\t\tif (prop === STATE_SYMBOL) {\n\t\t\treturn Reflect.get(target, STATE_SYMBOL);\n\t\t}\n\n\t\t/** @type {ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tlet s = metadata.s.get(prop);\n\n\t\t// create a source, but only if it's an own property and not a prototype property\n\t\tif (s === undefined && (!(prop in target) || get_descriptor(target, prop)?.writable)) {\n\t\t\ts = source(proxy(target[prop], metadata));\n\t\t\tmetadata.s.set(prop, s);\n\t\t}\n\n\t\tif (s !== undefined) {\n\t\t\tconst value = get(s);\n\t\t\treturn value === UNINITIALIZED ? undefined : value;\n\t\t}\n\n\t\treturn Reflect.get(target, prop, receiver);\n\t},\n\n\tgetOwnPropertyDescriptor(target, prop) {\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t/** @type {ProxyMetadata} */\n\t\t\tconst metadata = target[STATE_SYMBOL];\n\t\t\tconst s = metadata.s.get(prop);\n\n\t\t\tif (s) {\n\t\t\t\tdescriptor.value = get(s);\n\t\t\t}\n\t\t}\n\n\t\treturn descriptor;\n\t},\n\n\thas(target, prop) {\n\t\tif (prop === STATE_SYMBOL) {\n\t\t\treturn true;\n\t\t}\n\t\t/** @type {ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tconst has = Reflect.has(target, prop);\n\n\t\tlet s = metadata.s.get(prop);\n\t\tif (\n\t\t\ts !== undefined ||\n\t\t\t(current_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t) {\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED);\n\t\t\t\tmetadata.s.set(prop, s);\n\t\t\t}\n\t\t\tconst value = get(s);\n\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn has;\n\t},\n\n\tset(target, prop, value, receiver) {\n\t\t/** @type {ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\t\tlet s = metadata.s.get(prop);\n\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t// object property before writing to that property.\n\t\tif (s === undefined) {\n\t\t\t// the read creates a signal\n\t\t\tuntrack(() => receiver[prop]);\n\t\t\ts = metadata.s.get(prop);\n\t\t}\n\t\tif (s !== undefined) {\n\t\t\tset(s, proxy(value, metadata));\n\t\t}\n\t\tconst is_array = metadata.a;\n\t\tconst not_has = !(prop in target);\n\n\t\tif (DEV) {\n\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\tconst prop_metadata = value?.[STATE_SYMBOL];\n\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t}\n\t\t\tcheck_ownership(metadata);\n\t\t}\n\n\t\t// variable.length = value -> clear all signals with index >= value\n\t\tif (is_array && prop === 'length') {\n\t\t\tfor (let i = value; i < target.length; i += 1) {\n\t\t\t\tconst s = metadata.s.get(i + '');\n\t\t\t\tif (s !== undefined) set(s, UNINITIALIZED);\n\t\t\t}\n\t\t}\n\n\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\tif (descriptor?.set) {\n\t\t\tdescriptor.set.call(receiver, value);\n\t\t} else {\n\t\t\ttarget[prop] = value;\n\t\t}\n\n\t\tif (not_has) {\n\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t// will not cause the length to be out of sync.\n\t\t\tif (is_array) {\n\t\t\t\tconst ls = metadata.s.get('length');\n\t\t\t\tconst length = target.length;\n\t\t\t\tif (ls !== undefined && ls.v !== length) {\n\t\t\t\t\tset(ls, length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdate_version(metadata.v);\n\t\t}\n\n\t\treturn true;\n\t},\n\n\townKeys(target) {\n\t\t/** @type {ProxyMetadata} */\n\t\tconst metadata = target[STATE_SYMBOL];\n\n\t\tget(metadata.v);\n\t\treturn Reflect.ownKeys(target);\n\t}\n};\n\nif (DEV) {\n\tstate_proxy_handler.setPrototypeOf = () => {\n\t\te.state_prototype_fixed();\n\t};\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\tvar metadata = value[STATE_SYMBOL];\n\t\tif (metadata) {\n\t\t\treturn metadata.p;\n\t\t}\n\t}\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\nexport function child(node) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, is_text = false) {\n\tif (!hydrating) {\n\t\treturn /** @type {TemplateNode} */ (get_next_sibling(node));\n\t}\n\n\tvar next_sibling = /** @type {TemplateNode} */ (get_next_sibling(hydrate_node));\n\n\tvar type = next_sibling.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\tnext_sibling?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Effect, Reaction, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcurrent_component_context,\n\tcurrent_effect,\n\tcurrent_reaction,\n\tdestroy_effect_children,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_current_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (current_effect === null && current_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (current_reaction !== null && (current_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Reaction} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = current_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: current_component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (current_reaction !== null && (current_reaction.f & DERIVED) !== 0) {\n\t\t\tpush_effect(effect, current_reaction);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (current_reaction === null) {\n\t\treturn false;\n\t}\n\n\treturn (current_reaction.f & UNOWNED) === 0;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tcurrent_effect !== null &&\n\t\t(current_effect.f & RENDER_EFFECT) !== 0 &&\n\t\t// TODO do we actually need this? removing them changes nothing\n\t\tcurrent_component_context !== null &&\n\t\t!current_component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (current_component_context);\n\t\t(context.e ??= []).push(fn);\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (current_component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (current_component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = current_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_current_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_current_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && (effect.f & BRANCH_EFFECT) !== 0 && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.parent =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\tupdate_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/** @import { Derived } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DESTROYED, DIRTY, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tcurrent_reaction,\n\tcurrent_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tcurrent_skip_reaction,\n\tupdate_reaction,\n\tdestroy_effect_children,\n\tincrement_version\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tlet flags = DERIVED | DIRTY;\n\tif (current_effect === null) flags |= UNOWNED;\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0\n\t};\n\n\tif (current_reaction !== null && (current_reaction.f & DERIVED) !== 0) {\n\t\tvar current_derived = /** @type {Derived} */ (current_reaction);\n\t\tif (current_derived.deriveds === null) {\n\t\t\tcurrent_derived.deriveds = [signal];\n\t\t} else {\n\t\t\tcurrent_derived.deriveds.push(signal);\n\t\t}\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tdestroy_effect_children(derived);\n\tvar deriveds = derived.deriveds;\n\n\tif (deriveds !== null) {\n\t\tderived.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value;\n\n\tif (DEV) {\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\tdestroy_derived_children(derived);\n\t\tvalue = update_reaction(derived);\n\t}\n\n\tvar status =\n\t\t(current_skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null\n\t\t\t? MAYBE_DIRTY\n\t\t\t: CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.version = increment_version();\n\t}\n}\n\n/**\n * @param {Derived} signal\n * @returns {void}\n */\nfunction destroy_derived(signal) {\n\tdestroy_derived_children(signal);\n\tremove_reactions(signal, 0);\n\tset_signal_status(signal, DESTROYED);\n\n\t// TODO we need to ensure we remove the derived from any parent derives\n\n\tsignal.first =\n\t\tsignal.last =\n\t\tsignal.deps =\n\t\tsignal.reactions =\n\t\t// @ts-expect-error `signal.fn` cannot be `null` while the signal is alive\n\t\tsignal.fn =\n\t\t\tnull;\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"invalid_default_snippet\");\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_outside_component\");\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"store_invalid_shape\");\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"svelte_element_invalid_this_value\");\n\t}\n}","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of } from '../shared/utils.js';\nimport {\n\tdestroy_effect,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { mutate, set, source } from './reactivity/sources.js';\nimport { update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\n// Used for controlling the flush of effects.\nlet current_scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet current_queued_root_effects = [];\n\nlet flush_count = 0;\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let current_reaction = null;\n\n/** @param {null | Reaction} reaction */\nexport function set_current_reaction(reaction) {\n\tcurrent_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let current_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_current_effect(effect) {\n\tcurrent_effect = effect;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let current_untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_current_untracked_writes(value) {\n\tcurrent_untracked_writes = value;\n}\n\n/** @type {number} Used by sources and deriveds for handling updates to unowned deriveds */\nlet current_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let current_skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\nexport let is_signals_recorded = false;\nlet captured_signals = new Set();\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let current_component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_current_component_context(context) {\n\tcurrent_component_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_version() {\n\treturn current_version++;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn current_component_context !== null && current_component_context.l === null;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\n\t\t\tif ((flags & DISCONNECTED) !== 0) {\n\t\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t(dependencies[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.version > reaction.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (is_unowned) {\n\t\t\t\t\t// TODO is there a more logical place to do this work?\n\t\t\t\t\tif (!current_skip_reaction && !dependency?.reactions?.includes(reaction)) {\n\t\t\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !current_skip_reaction)\n\t\t\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t\t\t// if linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean.\n\t\tif (!is_unowned) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Error} error\n * @param {Effect} effect\n * @param {ComponentContext | null} component_context\n */\nfunction handle_error(error, effect, component_context) {\n\t// Given we don't yet have error boundaries, we will just always throw.\n\tif (!DEV || handled_errors.has(error) || component_context === null) {\n\t\tthrow error;\n\t}\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\t/** @type {string} */\n\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\tif (filename) {\n\t\t\tconst file = filename.split('/').pop();\n\t\t\tcomponent_stack.push(file);\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack + new_lines.join('\\n')\n\t\t});\n\t}\n\n\thandled_errors.add(error);\n\tthrow error;\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = current_untracked_writes;\n\tvar previous_reaction = current_reaction;\n\tvar previous_skip_reaction = current_skip_reaction;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tcurrent_untracked_writes = null;\n\tcurrent_reaction = (reaction.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tcurrent_skip_reaction = !is_flushing_effect && (reaction.f & UNOWNED) !== 0;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!current_skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tcurrent_untracked_writes = previous_untracked_writes;\n\t\tcurrent_reaction = previous_reaction;\n\t\tcurrent_skip_reaction = previous_skip_reaction;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (reactions === null && (dependency.f & DERIVED) !== 0) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar component_context = effect.ctx;\n\n\tvar previous_effect = current_effect;\n\tvar previous_component_context = current_component_context;\n\n\tcurrent_effect = effect;\n\tcurrent_component_context = component_context;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) === 0) {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\n\t\teffect.version = current_version;\n\t} catch (error) {\n\t\thandle_error(/** @type {Error} */ (error), effect, current_component_context);\n\t} finally {\n\t\tcurrent_effect = previous_effect;\n\t\tcurrent_component_context = previous_component_context;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\te.effect_update_depth_exceeded();\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\t// When working with custom elements, the root effects might not have a root\n\t\t\tif (effect.first === null && (effect.f & BRANCH_EFFECT) === 0) {\n\t\t\t\tflush_queued_effects([effect]);\n\t\t\t} else {\n\t\t\t\t/** @type {Effect[]} */\n\t\t\t\tvar collected_effects = [];\n\n\t\t\t\tprocess_effects(effect, collected_effects);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0 && check_dirtiness(effect)) {\n\t\t\tupdate_effect(effect);\n\n\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t// immediate effects.\n\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t} else {\n\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\teffect.fn = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = current_queued_root_effects;\n\tcurrent_queued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (current_scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & BRANCH_EFFECT) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t}\n\n\tcurrent_queued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\t// TODO: we probably don't need to check for destroyed as it shouldn't be encountered?\n\t\tvar is_active = (flags & (DESTROYED | INERT)) === 0;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_clean = (flags & CLEAN) !== 0;\n\t\tvar child = current_effect.first;\n\n\t\t// Skip this branch if it's clean\n\t\tif (is_active && (!is_branch || !is_clean)) {\n\t\t\tif (is_branch) {\n\t\t\t\tset_signal_status(current_effect, CLEAN);\n\t\t\t}\n\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (!is_branch && check_dirtiness(current_effect)) {\n\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t// Child might have been mutated since running the effect\n\t\t\t\t\tchild = current_effect.first;\n\t\t\t\t}\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\tif (is_branch || is_clean) {\n\t\t\t\t\tif (child !== null) {\n\t\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\teffects.push(current_effect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar sibling = current_effect.next;\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = current_scheduler_mode;\n\tvar previous_queued_root_effects = current_queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tcurrent_scheduler_mode = FLUSH_SYNC;\n\t\tcurrent_queued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (current_queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\n\t\treturn result;\n\t} finally {\n\t\tcurrent_scheduler_mode = previous_scheduler_mode;\n\t\tcurrent_queued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn signal.v;\n\t}\n\n\tif (is_signals_recorded) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (current_reaction !== null) {\n\t\tvar deps = current_reaction.deps;\n\n\t\t// If the signal is accessing the same dependencies in the same\n\t\t// order as it did last time, increment `skipped_deps`\n\t\t// rather than updating `new_deps`, which creates GC cost\n\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\tskipped_deps++;\n\t\t} else if (new_deps === null) {\n\t\t\tnew_deps = [signal];\n\t\t} else {\n\t\t\tnew_deps.push(signal);\n\t\t}\n\n\t\tif (\n\t\t\tcurrent_untracked_writes !== null &&\n\t\t\tcurrent_effect !== null &&\n\t\t\t(current_effect.f & CLEAN) !== 0 &&\n\t\t\t(current_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tcurrent_untracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(current_effect, DIRTY);\n\t\t\tschedule_effect(current_effect);\n\t\t}\n\t}\n\n\tif ((flags & DERIVED) !== 0) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar previous_is_signals_recorded = is_signals_recorded;\n\tvar previous_captured_signals = captured_signals;\n\tis_signals_recorded = true;\n\tcaptured_signals = new Set();\n\tvar captured = captured_signals;\n\tvar signal;\n\ttry {\n\t\tuntrack(fn);\n\t} finally {\n\t\tis_signals_recorded = previous_is_signals_recorded;\n\t\tif (is_signals_recorded) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\tfor (signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\tmutate(dep, null /* doesnt matter */);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmutate(signal, null /* doesnt matter */);\n\t\t}\n\t}\n}\n\n/**\n * Use `untrack` to prevent something from being treated as an `$effect`/`$derived` dependency.\n *\n * https://svelte-5-preview.vercel.app/docs/functions#untrack\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = current_reaction;\n\ttry {\n\t\tcurrent_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tcurrent_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (current_component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = current_component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (current_component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (current_component_context.c ??= new Map(\n\t\tget_parent_context(current_component_context) || undefined\n\t));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update(signal, d = 1) {\n\tvar value = +get(signal);\n\tset(signal, value + d);\n\treturn value;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre(signal, d = 1) {\n\treturn set(signal, +get(signal) + d);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcurrent_component_context = {\n\t\tp: current_component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (!runes) {\n\t\tcurrent_component_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcurrent_component_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = current_component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst effects = context_stack_item.e;\n\t\tif (effects !== null) {\n\t\t\tcontext_stack_item.e = null;\n\t\t\tfor (var i = 0; i < effects.length; i++) {\n\t\t\t\teffect(effects[i]);\n\t\t\t}\n\t\t}\n\t\tcurrent_component_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { dev_current_component_function } from '../../runtime.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn handler.call(this, event);\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @template {HTMLElement} Element\n * @template {keyof HTMLElementEventMap} Type\n * @overload\n * @param {Element} element\n * @param {Type} type\n * @param {(this: Element, event: HTMLElementEventMap[Type]) => any} handler\n * @param {AddEventListenerOptions} [options]\n * @returns {() => void}\n */\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @overload\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n * @returns {() => void}\n */\n\n/**\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.parentNode || /** @type {any} */ (current_target).host || null;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-expect-error is used above\n\t\tcurrent_target = handler_element;\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = filename\n\t\t\t? loc\n\t\t\t\t? ` at ${filename}:${loc[0]}:${loc[1]}`\n\t\t\t\t: ` in ${filename}`\n\t\t\t: '';\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { current_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\nimport { queue_micro_task } from './task.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (current_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar first = true;\n\tvar fn = template(content, flags);\n\n\treturn () => {\n\t\tif (hydrating) return fn();\n\n\t\tvar node = /** @type {Element | DocumentFragment} */ (fn());\n\n\t\tif (first) {\n\t\t\tfirst = false;\n\t\t\trun_scripts(node);\n\t\t}\n\n\t\treturn node;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar first = true;\n\tvar fn = ns_template(content, flags);\n\n\treturn () => {\n\t\tif (hydrating) return fn();\n\n\t\tvar node = /** @type {Element | DocumentFragment} */ (fn());\n\n\t\tif (first) {\n\t\t\tfirst = false;\n\t\t\trun_scripts(node);\n\t\t}\n\n\t\treturn node;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return;\n\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tfor (const script of scripts) {\n\t\tvar clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// If node === script tag, replaceWith will do nothing because there's no parent yet,\n\t\t// waiting until that's the case using an effect solves this.\n\t\t// Don't do it in other circumstances or we could accidentally execute scripts\n\t\t// in an adjacent @html tag that was instantiated in the meantime.\n\t\tif (script === node) {\n\t\t\tqueue_micro_task(() => script.replaceWith(clone));\n\t\t} else {\n\t\t\tscript.replaceWith(clone);\n\t\t}\n\t}\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (current_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'inert',\n\t'volume'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst PASSIVE_EVENTS = ['wheel', 'touchstart', 'touchmove', 'touchend', 'touchcancel'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$state.is',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, current_component_context, current_effect } from './runtime.js';\nimport { effect_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// @ts-expect-error\n\tif (value !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = value;\n\t\ttext.nodeValue = value == null ? '' : value + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor?: Node;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}: {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tanchor?: Node;\n * \t\tevents?: Record<string, (e: any) => any>;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\tconst anchor = options.anchor ?? options.target.appendChild(create_text());\n\treturn _mount(component, { ...options, anchor });\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {{\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor: Node;\n * \t\tprops?: any;\n * \t\tevents?: any;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = effect_root(() => {\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (current_component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (current_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\t\t\tmounted_components.delete(component);\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n * @param {Record<string, any>} component\n */\nexport function unmount(component) {\n\tconst fn = mounted_components.get(component);\n\tif (DEV && !fn) {\n\t\tw.lifecycle_double_unmount();\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.trace('stack trace');\n\t}\n\tfn?.();\n}\n","/** @import { Snapshot } from './types' */\nimport { DEV } from 'esm-env';\nimport * as w from './warnings.js';\nimport { get_prototype_of, is_array, object_prototype } from './utils.js';\n\n/**\n * In dev, we keep track of which properties could not be cloned. In prod\n * we don't bother, but we keep a dummy array around so that the\n * signature stays the same\n * @type {string[]}\n */\nconst empty = [];\n\n/**\n * @template T\n * @param {T} value\n * @param {boolean} [skip_warning]\n * @returns {Snapshot<T>}\n */\nexport function snapshot(value, skip_warning = false) {\n\tif (DEV) {\n\t\t/** @type {string[]} */\n\t\tconst paths = [];\n\n\t\tconst copy = clone(value, new Map(), '', paths);\n\t\tif (paths.length === 1 && paths[0] === '' && !skip_warning) {\n\t\t\t// value could not be cloned\n\t\t\tw.state_snapshot_uncloneable();\n\t\t} else if (paths.length > 0 && !skip_warning) {\n\t\t\t// some properties could not be cloned\n\t\t\tconst slice = paths.length > 10 ? paths.slice(0, 7) : paths.slice(0, 10);\n\t\t\tconst excess = paths.length - slice.length;\n\n\t\t\tlet uncloned = slice.map((path) => `- <value>${path}`).join('\\n');\n\t\t\tif (excess > 0) uncloned += `\\n- ...and ${excess} more`;\n\n\t\t\tw.state_snapshot_uncloneable(uncloned);\n\t\t}\n\n\t\treturn copy;\n\t}\n\n\treturn clone(value, new Map(), '', empty);\n}\n\n/**\n * @template T\n * @param {T} value\n * @param {Map<T, Snapshot<T>>} cloned\n * @param {string} path\n * @param {string[]} paths\n * @returns {Snapshot<T>}\n */\nfunction clone(value, cloned, path, paths) {\n\tif (typeof value === 'object' && value !== null) {\n\t\tconst unwrapped = cloned.get(value);\n\t\tif (unwrapped !== undefined) return unwrapped;\n\n\t\tif (is_array(value)) {\n\t\t\tconst copy = /** @type {Snapshot<any>} */ ([]);\n\t\t\tcloned.set(value, copy);\n\n\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\tcopy.push(clone(value[i], cloned, DEV ? `${path}[${i}]` : path, paths));\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (get_prototype_of(value) === object_prototype) {\n\t\t\t/** @type {Snapshot<any>} */\n\t\t\tconst copy = {};\n\t\t\tcloned.set(value, copy);\n\n\t\t\tfor (var key in value) {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcopy[key] = clone(value[key], cloned, DEV ? `${path}.${key}` : path, paths);\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t\t}\n\n\t\tif (typeof (/** @type {T & { toJSON?: any } } */ (value).toJSON) === 'function') {\n\t\t\treturn clone(\n\t\t\t\t/** @type {T & { toJSON(): any } } */ (value).toJSON(),\n\t\t\t\tcloned,\n\t\t\t\tDEV ? `${path}.toJSON()` : path,\n\t\t\t\tpaths\n\t\t\t);\n\t\t}\n\t}\n\n\tif (value instanceof EventTarget) {\n\t\t// can't be cloned\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n\n\ttry {\n\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t} catch (e) {\n\t\tif (DEV) {\n\t\t\tpaths.push(path);\n\t\t}\n\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {() => boolean} get_condition\n * @param {(anchor: Node) => void} consequent_fn\n * @param {null | ((anchor: Node) => void)} [alternate_fn]\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, get_condition, consequent_fn, alternate_fn = null, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {boolean | null} */\n\tvar condition = null;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tblock(() => {\n\t\tif (condition === (condition = !!get_condition())) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else {\n\t\t\t\tconsequent_effect = branch(() => consequent_fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (alternate_fn) {\n\t\t\t\talternate_effect = branch(() => alternate_fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { current_effect } from '../../runtime.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tblock(() => {\n\t\tvar collection = get_collection();\n\n\t\tvar array = is_array(collection)\n\t\t\t? collection\n\t\t\t: collection == null\n\t\t\t\t? []\n\t\t\t\t: array_from(collection);\n\n\t\tvar length = array.length;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(hydrate_node, state, prev, null, value, key, i, render_fn, flags);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\tto_destroy.push(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (current_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (current_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tset(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tset(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>) => void} render_fn\n * @param {number} flags\n * @returns {EachItem}\n */\nfunction create_item(anchor, state, prev, next, value, key, index, render_fn, flags) {\n\tvar previous_each_item = current_each_item;\n\n\ttry {\n\t\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\t\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\t\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\t\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\t\t/** @type {EachItem} */\n\t\tvar item = {\n\t\t\ti,\n\t\t\tv,\n\t\t\tk: key,\n\t\t\ta: null,\n\t\t\t// @ts-expect-error\n\t\t\te: null,\n\t\t\tprev,\n\t\t\tnext\n\t\t};\n\n\t\tcurrent_each_item = item;\n\t\titem.e = branch(() => render_fn(anchor, v, i), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { TemplateNode, Dom, Effect } from '#client' */\nimport { block, branch, pause_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\n\n/**\n * @template P\n * @template {(props: P) => void} C\n * @param {TemplateNode} node\n * @param {() => C} get_component\n * @param {(anchor: TemplateNode, component: C) => Dom | void} render_fn\n * @returns {void}\n */\nexport function component(node, get_component, render_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {C} */\n\tvar component;\n\n\t/** @type {Effect | null} */\n\tvar effect;\n\n\tblock(() => {\n\t\tif (component === (component = get_component())) return;\n\n\t\tif (effect) {\n\t\t\tpause_effect(effect);\n\t\t\teffect = null;\n\t\t}\n\n\t\tif (component) {\n\t\t\teffect = branch(() => render_fn(anchor, component));\n\t\t}\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { NAMESPACE_SVG } from '../../../../constants.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task, queue_micro_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (attributes.value === (attributes.value = value)) return;\n\t// @ts-expect-error\n\telement.value = value;\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (attributes.checked === (attributes.checked = checked)) return;\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvalue = value == null ? null : value + '';\n\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (attribute === 'src' || attribute === 'href' || attribute === 'srcset') {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value);\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value === null) {\n\t\telement.removeAttribute(attribute);\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {any} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tvar curr_val = node[prop];\n\t\tvar next_val = typeof curr_val === 'boolean' && value === '' ? true : value;\n\t\tif (typeof curr_val !== 'object' || curr_val !== next_val) {\n\t\t\tnode[prop] = next_val;\n\t\t}\n\t} else {\n\t\tset_attribute(node, prop, value);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} preserve_attribute_case\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tskip_warning\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (!setters) setters_cache.set(element.nodeName, (setters = get_setters(element)));\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\t/** @type {Array<[string, any, () => void]>} */\n\tvar events = [];\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!prev) {\n\t\t\t\t\t\tevents.push([\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t() => (current[event_handle_key] = create_event(event_name, element, handle, opts))\n\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (value == null) {\n\t\t\tattributes[key] = null;\n\t\t\telement.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || key === 'value') {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tif (setters.includes(name)) {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[name] = value;\n\t\t\t\t}\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value);\n\t\t\t}\n\t\t}\n\t}\n\n\t// On the first run, ensure that events are added after bindings so\n\t// that their listeners fire after the binding listeners\n\tif (!prev) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (!element.isConnected) return;\n\t\t\tfor (const [key, value, evt] of events) {\n\t\t\t\tif (current[key] === value) {\n\t\t\t\t\tevt();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn current;\n}\n\n/**\n * @param {Element} node\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next The new attributes - this function mutates this object\n * @param {string} [css_hash]\n */\nexport function set_dynamic_element_attributes(node, prev, next, css_hash) {\n\tif (node.tagName.includes('-')) {\n\t\tfor (var key in prev) {\n\t\t\tif (!(key in next)) {\n\t\t\t\tnext[key] = null;\n\t\t\t}\n\t\t}\n\n\t\tif (css_hash !== undefined) {\n\t\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t\t}\n\n\t\tfor (key in next) {\n\t\t\tset_custom_element_data(node, key, next[key]);\n\t\t}\n\n\t\treturn next;\n\t}\n\n\treturn set_attributes(\n\t\t/** @type {Element & ElementCSSInlineStyle} */ (node),\n\t\tprev,\n\t\tnext,\n\t\tcss_hash,\n\t\tnode.namespaceURI !== NAMESPACE_SVG\n\t);\n}\n\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * In case of draggable trying to set `element.draggable='false'` will actually set\n * draggable to `true`. If this list becomes too big, rethink this approach.\n */\nvar always_set_through_set_attribute = ['width', 'height', 'draggable'];\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\t/** @type {string[]} */\n\tvar setters = [];\n\tvar descriptors;\n\tvar proto = get_prototype_of(element);\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\twhile (proto.constructor.name !== 'Element') {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set && !always_set_through_set_attribute.includes(key)) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string | null} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value ?? '')) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset ?? '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {() => void} handler\n * @param {() => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, handler);\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset();\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = on_reset;\n\t}\n\n\tadd_form_reset_listener();\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { get_proxied_value, is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get_value\n * @param {(value: unknown) => void} update\n * @returns {void}\n */\nexport function bind_value(input, get_value, update) {\n\tlisten_to_event_and_reset_event(input, 'input', () => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tupdate(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t});\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get_value();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultValue !== input.value) {\n\t\t\tupdate(input.value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// @ts-expect-error the value is coerced on assignment\n\t\tinput.value = value ?? '';\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get_value\n * @param {(value: unknown) => void} update\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get_value, update) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tupdate(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => update(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get_value();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = get_proxied_value(value).includes(get_proxied_value(input.__value));\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tupdate(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get_value\n * @param {(value: unknown) => void} update\n * @returns {void}\n */\nexport function bind_checked(input, get_value, update) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tvar value = input.checked;\n\t\tupdate(value);\n\t});\n\n\tif (get_value() == undefined) {\n\t\tupdate(false);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get_value();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get_value\n * @param {(value: FileList | null) => void} update\n */\nexport function bind_files(input, get_value, update) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tupdate(input.files);\n\t});\n\n\trender_effect(() => {\n\t\tinput.files = get_value();\n\t});\n}\n","import { effect } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport { untrack } from '../../../runtime.js';\nimport { is } from '../../../proxy.js';\n\n/**\n * Selects the correct option(s) (depending on whether this is a multiple select)\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n * @param {boolean} [mounting]\n */\nexport function select_option(select, value, mounting) {\n\tif (select.multiple) {\n\t\treturn select_options(select, value);\n\t}\n\n\tfor (var option of select.options) {\n\t\tvar option_value = get_option_value(option);\n\t\tif (is(option_value, value)) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * Selects the correct option(s) if `value` is given,\n * and then sets up a mutation observer to sync the\n * current selection to the dom when it changes. Such\n * changes could for example occur when options are\n * inside an `#each` block.\n * @template V\n * @param {HTMLSelectElement} select\n * @param {() => V} [get_value]\n */\nexport function init_select(select, get_value) {\n\tlet mounting = true;\n\teffect(() => {\n\t\tif (get_value) {\n\t\t\tselect_option(select, untrack(get_value), mounting);\n\t\t}\n\t\tmounting = false;\n\n\t\tvar observer = new MutationObserver(() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = select.__value;\n\t\t\tselect_option(select, value);\n\t\t\t// Deliberately don't update the potential binding value,\n\t\t\t// the model should be preserved unless explicitly changed\n\t\t});\n\n\t\tobserver.observe(select, {\n\t\t\t// Listen to option element changes\n\t\t\tchildList: true,\n\t\t\tsubtree: true, // because of <optgroup>\n\t\t\t// Listen to option element value attribute changes\n\t\t\t// (doesn't get notified of select value changes,\n\t\t\t// because that property is not reflected as an attribute)\n\t\t\tattributes: true,\n\t\t\tattributeFilter: ['value']\n\t\t});\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n}\n\n/**\n * @param {HTMLSelectElement} select\n * @param {() => unknown} get_value\n * @param {(value: unknown) => void} update\n * @returns {void}\n */\nexport function bind_select_value(select, get_value, update) {\n\tvar mounting = true;\n\n\tlisten_to_event_and_reset_event(select, 'change', () => {\n\t\t/** @type {unknown} */\n\t\tvar value;\n\n\t\tif (select.multiple) {\n\t\t\tvalue = [].map.call(select.querySelectorAll(':checked'), get_option_value);\n\t\t} else {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option = select.querySelector(':checked');\n\t\t\tvalue = selected_option && get_option_value(selected_option);\n\t\t}\n\n\t\tupdate(value);\n\t});\n\n\t// Needs to be an effect, not a render_effect, so that in case of each loops the logic runs after the each block has updated\n\teffect(() => {\n\t\tvar value = get_value();\n\t\tselect_option(select, value, mounting);\n\n\t\t// Mounting and value undefined -> take selection from dom\n\t\tif (mounting && value === undefined) {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option = select.querySelector(':checked');\n\t\t\tif (selected_option !== null) {\n\t\t\t\tvalue = get_option_value(selected_option);\n\t\t\t\tupdate(value);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-ignore\n\t\tselect.__value = value;\n\t\tmounting = false;\n\t});\n\n\t// don't pass get_value, we already initialize it in the effect above\n\tinit_select(select);\n}\n\n/**\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n */\nfunction select_options(select, value) {\n\tfor (var option of select.options) {\n\t\t// @ts-ignore\n\t\toption.selected = ~value.indexOf(get_option_value(option));\n\t}\n}\n\n/** @param {HTMLOptionElement} option */\nfunction get_option_value(option) {\n\t// __value only exists if the <option> has a value attribute\n\tif ('__value' in option) {\n\t\treturn option.__value;\n\t} else {\n\t\treturn option.value;\n\t}\n}\n","/** @import { Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, is_signals_recorded, untrack, update } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP } from '../constants.js';\nimport { proxy } from '../proxy.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return false;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\n\tvar prop_value = /** @type {V} */ (props[key]);\n\tvar setter = get_descriptor(props, key)?.set;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\n\tvar get_fallback = () => {\n\t\tif (lazy && fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\tvar current = get(current_value);\n\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (is_signals_recorded) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\tget(current_value); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\treturn current;\n\t};\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '5.0.0-next.225';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export const serialize = value => JSON.stringify(value, stringifyReplacer);\nexport const deserialize = text => JSON.parse(text, parseReviver);\n\nexport function getLocalStorageKey(svecklistid) {\n  const body = document.querySelector(\"body\");\n  const portalUrl = body.dataset.portalUrl;\n  const baseUrl = body.dataset.baseUrl;\n  const basePath = baseUrl.replace(portalUrl, '');\n  const localStorageKey = `svecklist-${svecklistid}:${basePath}`;\n  return localStorageKey;\n}\n\n// License: CC0\nfunction stringifyReplacer(key, value) {\n  if (typeof value === 'object' && value !== null) {\n    if (value instanceof Map) {\n      return {\n        _meta: { type: 'map' },\n        value: Array.from(value.entries()),\n      };\n    } else if (value instanceof Set) {\n      // bonus feature!\n      return {\n        _meta: { type: 'set' },\n        value: Array.from(value.values()),\n      };\n    } else if ('_meta' in value) {\n      // Escape \"_meta\" properties\n      return {\n        ...value,\n        _meta: {\n          type: 'escaped-meta',\n          value: value['_meta'],\n        },\n      };\n    }\n  }\n  return value;\n}\n\nfunction parseReviver(key, value) {\n  if (typeof value === 'object' && value !== null) {\n    if ('_meta' in value) {\n      if (value._meta.type === 'map') {\n        return new Map(value.value);\n      } else if (value._meta.type === 'set') {\n        return new Set(value.value);\n      } else if (value._meta.type === 'escaped-meta') {\n        // Un-escape the \"_meta\" property\n        return {\n          ...value,\n          _meta: value._meta.value,\n        };\n      } else {\n        console.warn('Unexpected meta', value._meta);\n      }\n    }\n  }\n  return value;\n}\n","// import MapifyTs from 'mapify-ts';\nimport { deserialize, serialize } from './utils';\n\n\nexport class LocalStore {\n  value = $state();\n  key = '';\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n\n    // load data\n    const item = localStorage.getItem(key);\n\n    if (item) this.value = this.deserialize(item);\n    console.log(`LocalStore: deserialized data: ${this.deserialize(item)}`)\n    console.log(this.deserialize(item))\n\n    $effect(() => {\n      console.log(\"effect run inside store ;)\")\n      // this.save();\n      localStorage.setItem(this.key, this.serialize($state.snapshot(this.value)));\n    });\n  }\n\n  save() {\n      localStorage.setItem(this.key, this.serialize($state.snapshot(this.value)));\n      console.log(`LocalStore: serialized and saved: ${this.serialize($state.snapshot(this.value))}`)\n  }\n\n  serialize(value) {\n    return serialize(value);\n  }\n\n  deserialize(item) {\n    return deserialize(item);\n  }\n}\n\nexport function localStore(key, value) {\n  return new LocalStore(key, value);\n}\n","<script>\n  import { getContext } from \"svelte\";\n\n  let {\n    index,\n    label,\n    text,\n    checked = $bindable(false),\n    weight = $bindable(0),\n    mode = \"edit\",\n  } = $props();\n\n  // let fillChecked = $state(false);\n  const fillItem = getContext(\"fillItem\");\n  const editItem = getContext(\"editItem\");\n  const removeItem = getContext(\"removeItem\");\n</script>\n\n<div class=\"box pico\">\n  <label class=\"checkbox\">\n    {#if mode === \"edit\"}\n      &nbsp;\n    {/if}\n    <div>\n    {#if mode === \"edit\"}\n      <input\n        type=\"checkbox\"\n        name=\"checkbox\"\n        data-index={index}\n        onchange={editItem}\n        bind:checked\n      />\n    {/if}\n    {#if mode === \"display\"}\n      <input\n        type=\"checkbox\"\n        name=\"checkbox\"\n        data-index={index}\n        onchange={fillItem}\n        bind:checked\n      />\n\n    {/if}\n    </div>\n  </label>\n  <label class=\"text\">\n    {#if mode === \"edit\"}\n      check description\n    {/if}\n    {#if mode === \"edit\"}\n      <textarea name=\"text\" data-index={index} onchange={editItem}\n        >{label}</textarea\n      >\n    {/if}\n    {#if mode === \"display\"}\n      <div class=\"text\">{label}</div>\n    {/if}\n  </label>\n  {#if mode === \"edit\"}\n    <label class=\"weight\">\n      weight\n      <div>\n        <input\n          type=\"text\"\n          name=\"weight\"\n          data-index={index}\n          onchange={editItem}\n          value={weight}\n        />\n      </div>\n    </label>\n  {/if}\n  {#if mode === \"edit\"}\n    <label class=\"remove\">\n      <div>\n        <button onclick={removeItem} data-index={index}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-trash\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z\"\n            />\n            <path\n              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z\"\n            />\n          </svg>\n        </button>\n      </div>\n    </label>\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  // @use \"@picocss/pico/scss/pico\";\n  // @use \"@picocss/pico/scss/colors\" as *;\n\n  .box {\n    display: flex;\n    width: 100% !important;\n    align-items: center;\n    gap: 1em;\n    label {\n      display: flex;\n      flex-direction: column;\n      > input,\n      > textarea,\n      > div {\n        margin-top: 0;\n        margin-bottom: 0;\n        height: 5em;\n      }\n    }\n    .text {\n      flex-grow: 1;\n    }\n    .weight {\n      max-width: fit-content;\n      flex-basis: 7ch;\n      flex-shrink: 1;\n    }\n  }\n</style>\n","<script>\n  import { getContext } from \"svelte\";\n\n  let { index, label, text, weight = $bindable(0), mode = \"edit\" } = $props();\n\n  const fillItem = getContext(\"fillItem\");\n  const editItem = getContext(\"editItem\");\n  const removeItem = getContext(\"removeItem\");\n</script>\n\n<div class=\"box pico\">\n  <label class=\"text\">\n    {#if mode === \"edit\"}\n      notes\n    {/if}\n    {#if mode === \"edit\"}\n      <textarea\n        name=\"textarea\"\n        data-index={index}\n        onchange={editItem}\n        >{label}</textarea\n      >\n    {/if}\n    {#if mode === \"display\"}\n      {label}\n      <textarea\n        name=\"textarea_data\"\n        data-index={index}\n        onchange={fillItem}\n      >{text}</textarea>\n    {/if}\n  </label>\n  {#if mode === \"edit\"}\n    <label class=\"weight\">\n      weight\n      <div>\n        <input\n          type=\"text\"\n          name=\"weight\"\n          data-index={index}\n          onchange={editItem}\n          value={weight}\n        />\n      </div>\n    </label>\n  {/if}\n  {#if mode === \"edit\"}\n    <label class=\"remove\">\n      <div>\n        <button onclick={removeItem} data-index={index}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-trash\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z\"\n            />\n            <path\n              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z\"\n            />\n          </svg>\n        </button>\n      </div>\n    </label>\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  // @use \"@picocss/pico/scss/pico\";\n  // @use \"$pico/colors/_index.scss\" as *;\n\n  .box {\n    display: flex;\n    width: 100% !important;\n    align-items: center;\n    gap: 1em;\n    label {\n      display: flex;\n      flex-direction: column;\n      > input,\n      > textarea,\n      > div {\n        margin-top: 0;\n        margin-bottom: 0;\n        height: 5em;\n      }\n    }\n    .text {\n      flex-grow: 1;\n    }\n    .weight {\n      max-width: fit-content;\n      flex-basis: 7ch;\n      flex-shrink: 1;\n    }\n  }\n</style>\n","<script>\n  import { setContext } from \"svelte\";\n  import { LocalStore } from '../localStore.svelte';\n  import { getLocalStorageKey } from '../utils';\n  import Checkbox from \"./Checkbox.svelte\";\n  import Textfield from \"./Textfield.svelte\";\n\n  let { svecklistid = 1 } = $props();\n  const localStorageKey = getLocalStorageKey(svecklistid);\n  console.log(`ChecklistDisplay: localstoragekey: ${localStorageKey}`)\n\n  let checklist = new LocalStore(localStorageKey, {schema: [], data: new Map()});\n  // if(!checklist.value.schema){\n  //   checklist.value.schema = [];\n  // }\n  // if(!checklist.value.data){\n  //   checklist.value.data = new Map();\n  // }\n  const componentTypes = {\n    checkbox: Checkbox,\n    textfield: Textfield,\n  }\n  let options = [\n    { compType: \"checkbox\" },\n    { compType: \"textfield\"},\n  ];\n\n  let ChecklistItem = {};\n\n  // let listSchema = $state([\n  //   // {compType: \"checkbox\", text: \"test\", weight: 10, checked: false}\n  // ]);\n  // let data = $state([\n  //   // {text: \"\", checked: false}\n  // ]);\n  // let checklistStorage = $state({\n  //   schema: [],\n  //   data: [],\n  // });\n\n  let selected = $state(options[0].compType);\n\n  function fillItem(event) {\n    const targetEl = event.target;\n    const index = parseInt(targetEl.dataset.index);\n    const name = targetEl.name;\n    console.log(`fillItem name: ${name}`)\n    switch (name) {\n      case 'text':\n        checklist.value.data.set(index, {textdata: targetEl.value});\n        break;\n      case 'checkbox':\n        console.log(`checked... ${index}`)\n        checklist.value.data.set(index, {checked: targetEl.checked});\n        break;\n      case 'textarea_data':\n        checklist.value.data.set(index, {textdata: targetEl.value});\n        break;\n    }\n    checklist.save();\n  }\n\n  setContext(\"fillItem\", fillItem);\n\n  // load data from localStorage\n  function loadData (){\n    checklist.value\n    // const checklistStorageJSON = localStorage.getItem(localStorageKey);\n    // if (checklistStorageJSON !== null) {\n    //   return JSON.parse(checklistStorageJSON);\n    // }\n  }\n\n  // $effect(() => {\n  //   listSchema = checklistStorage.schema;\n  // })\n\n  // write data to localStorage\n  // $effect(() => {\n  //   checklistStorage.data = $state.snapshot(data);\n  // })\n  // $effect(() => {\n  //   console.log(\"write data\")\n  //   $inspect(checklist.value)\n  //   localStorage.setItem(\n  //     localStorageKey,\n  //     JSON.stringify($state.snapshot(checklist.value))\n  //   );\n  // })\n\n  function getCheckedDataForIndex(i){\n    console.log(`getCheckedDataForIndex: ${i}`)\n    console.log(checklist.value.data)\n    const value = checklist.value.data.get(i);\n    if(value && value.hasOwnProperty('checked')){\n      return value.checked\n    }else{\n      return false\n    }\n  }\n\n  function getTextDataForIndex(i){\n    console.log(`getTextDataForIndex: ${i}`)\n    console.log(checklist.value.data)\n    const value = checklist.value.data.get(i);\n    if(value && value.hasOwnProperty('textdata')){\n      console.log(`found text ${value.textdata}`)\n      return value.textdata\n    }\n    else{\n      return ''\n    }\n  }\n\n\n</script>\n\n{#each checklist.value.schema as box, i}\n  <div class=\"sl-row\">\n    <svelte:component this={componentTypes[box.compType]} index={i}\n      checked={getCheckedDataForIndex(i)}\n      label={box.text}\n      text={getTextDataForIndex(i)}\n      weight={box.weight} mode=\"display\" />\n  </div>\n{/each}\n\n{#if !checklist.value.schema}\n  No list items added.\n{/if}\n\n<style lang=\"scss\">\n\n  fieldset.flex {\n    display: flex !important;\n    gap: 1em;\n    border: 1px solid var(--bs-secondary-bg, #abc2fb) !important;\n    background-color: var(--bs-secondary-bg, #abc2fb);\n    padding: 1em;\n  }\n\n  .sl-row {\n    padding: 1em 1em;\n    background-color: var(--pico-color-zinc-150, #ddd);\n\n    --transition-property: transform;\n    --transition-duration: 180ms;\n\n    transition: var(--transition-property) var(--transition-duration) ease-in-out;\n  }\n\n  .sl-row:hover,\n  .sl-row:focus-within {\n    transform: scale(1.03);\n  }\n\n  [name=\"add\"] {\n    max-width: 12ch;\n  }\n\n  .sl-row:nth-child(odd){\n    background-color: var(--pico-color-amber-50, #bbb);\n  }\n</style>\n","<script>\n  import { setContext } from \"svelte\";\n  import { LocalStore } from '../localStore.svelte';\n  import { getLocalStorageKey } from '../utils';\n  import Checkbox from \"./Checkbox.svelte\";\n  import Textfield from \"./Textfield.svelte\";\n\n\n  let { svecklistid = 1 } = $props();\n  const localStorageKey = getLocalStorageKey(svecklistid);\n\n  console.log(`ChecklistEdit: localstoragekey: ${localStorageKey}`)\n  const componentTypes = {\n    checkbox: Checkbox,\n    textfield: Textfield,\n  }\n  let options = [\n    { compType: \"checkbox\" },\n    { compType: \"textfield\"},\n  ];\n  let checklist = new LocalStore(localStorageKey, {schema: [], data: new Map()});\n  let ChecklistItem = {};\n\n  let boxes = $state([\n    // {compType: \"checkbox\", text: \"test\", weight: 10, checked: false}\n  ]);\n\n  let selected = $state(options[0].compType);\n\n  function editItem(event) {\n    const targetEl = event.target;\n    const index = parseInt(targetEl.dataset.index);\n    const name = targetEl.name;\n\n    switch (name) {\n      case 'text':\n        boxes[index].text = targetEl.value;\n        break;\n      case 'checkbox':\n        boxes[index].checked = targetEl.checked;\n        break;\n      case 'weight':\n        boxes[index].weight = targetEl.value;\n        break;\n      case 'textarea':\n        boxes[index].text = targetEl.value;\n        break;\n    }\n  }\n\n  function removeItem(event) {\n    event.preventDefault()\n    const targetEl = event.target;\n    const index = parseInt(targetEl.dataset.index);\n    if(boxes.length <= 1) {\n      boxes = [];\n    }\n    boxes = boxes.filter((_, itemIdx) => {\n      return itemIdx !== index;\n    });\n    console.log($state.snapshot(boxes))\n  }\n\n  setContext(\"editItem\", editItem);\n  setContext(\"removeItem\", removeItem);\n\n  // load data from localStorage\n  function loadDataFromLocalStorage() {\n    boxes = checklist.value.schema || [];\n    // const checklistStorageJSON = localStorage.getItem(localStorageKey);\n    // if (checklistStorageJSON !== null) {\n    //   console.log(`load data from LS: ${checklistStorageJSON}`);\n    //   const checklistStorage = JSON.parse(checklistStorageJSON);\n    //   boxes = checklistStorage.schema;\n    // }\n  }\n\n  // write data to localStorage\n  $effect(() => {\n    console.log($state.snapshot(boxes), typeof $state.snapshot(boxes));\n    // if($state.snapshot(boxes).length === 0){\n    //   return\n    // }\n    console.log(`store data in LS:`)\n    console.log($state.snapshot(boxes))\n    checklist.value.schema = $state.snapshot(boxes);\n    checklist.value.data = new Map();\n    // checklist.save()\n    // let checklistStorage = $state({\n    //   schema: boxes || [],\n    //   data: {},\n    // })\n    // localStorage.setItem(\n    //   localStorageKey,\n    //   JSON.stringify($state.snapshot(checklistStorage))\n    // );\n  })\n\n\n  function addItem(event) {\n    // boxes = [...boxes, new ChecklistItem({compType: $state.snapshot(selected)})]\n    console.log($state.snapshot(boxes))\n    boxes = [...boxes, {compType: $state.snapshot(selected), checked: false, text: '', weight: 0}]\n  }\n\n  loadDataFromLocalStorage();\n</script>\n\n<fieldset class=\"flex pico\">\n  <select bind:value={selected}>\n    {#each options as option}\n      <option value={option.compType}>{option.compType}</option>\n    {/each}\n  </select>\n  <input type=\"button\" name=\"add\" value=\"add box\" onclick={addItem} />\n</fieldset>\n\n{#each boxes as box, i}\n  <div class=\"sl-row\">\n    <svelte:component this={componentTypes[box.compType]} index={i} label={box.text} checked={box.checked} weight={box.weight} />\n  </div>\n{/each}\n\n{#if !boxes.length}\n  No list items added.\n{/if}\n\n<style lang=\"scss\">\n\n  // @use \"$pico/pico.conditional.scss\";\n  // @use \"$pico/colors/_index.scss\" as *;\n  // @use \"$pico/colors/_index.scss\" as *;\n\n\n  fieldset.flex {\n    display: flex !important;\n    gap: 1em;\n    border: 1px solid var(--bs-secondary-bg, #abc2fb) !important;\n    background-color: var(--bs-secondary-bg, #abc2fb);\n    padding: 1em;\n  }\n\n  .sl-row {\n    padding: 1em 1em;\n    background-color: var(--pico-color-zinc-150, #ddd);\n\n    --transition-property: transform;\n    --transition-duration: 180ms;\n\n    transition: var(--transition-property) var(--transition-duration) ease-in-out;\n  }\n\n  .sl-row:hover,\n  .sl-row:focus-within {\n    transform: scale(1.03);\n  }\n\n  [name=\"add\"] {\n    max-width: 12ch;\n  }\n\n  .sl-row:nth-child(odd){\n    background-color: var(--pico-color-amber-50, #bbb);\n  }\n</style>\n","<script>\n  import ChecklistDisplay from './ChecklistDisplay.svelte';\n  import ChecklistEdit from './ChecklistEdit.svelte';\n\n  let { svecklistid = 1, mode = 'display' } = $props();\n</script>\n\n{#if mode === 'edit'}\n  <ChecklistEdit svecklistid={svecklistid} />\n{/if}\n\n{#if mode === 'display'}\n  <ChecklistDisplay svecklistid={svecklistid} />\n{/if}\n\n<style lang=\"scss\">\n</style>\n","<script>\n\nimport Checklist from './lib/components/Checklist.svelte';\n\nlet { svecklistid = 1, mode = 'display'} = $props();\n\n</script>\n\n\n<Checklist svecklistid={svecklistid} mode={mode}></Checklist>\n\n<style>\n\n\n\n</style>\n","const body = document.querySelector(\"body\");\nconst portalUrl = body.dataset.portalUrl;\n\nconst patchRequest = new Request(\"\", {\n  method: \"PATCH\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: \"\",\n});\n\n\nexport async function patch(path, data) {\n  const url = `${portalUrl}/${path}`;\n\n  const plonePatchRequest = new Request(patchRequest,{\n    body: JSON.stringify(data),\n  })\n\n  try {\n    const response = await fetch(plonePatchRequest);\n    const result = await response.json();\n    console.log(\"Success:\", result);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\n\n\n","import { mount } from 'svelte';\nimport App from './App.svelte';\nimport { patch } from './api';\nimport './app.scss';\n\n// const app = new App({\n//   target: document.getElementById('svecklist'),\n// })\n\n// export default app\nlet targets = document.querySelectorAll(\".svecklist\");\n\ntargets.forEach(element => {\n  const app = mount(App, {\n    target: element,\n    props: {\n      svecklistid: element.getAttribute('svecklistid'),\n      mode: element.getAttribute('mode'),\n    }\n  })\n});\n"],"names":["is_array","array_from","is_frozen","define_property","get_descriptor","object_prototype","array_prototype","get_prototype_of","run_all","arr","i","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","HEAD_EFFECT","STATE_SYMBOL","equals","value","safe_not_equal","a","b","safe_equals","effect_in_teardown","rune","effect_in_unowned_derived","effect_orphan","effect_update_depth_exceeded","props_invalid_value","key","state_unsafe_mutation","source","v","mutable_source","initial_value","s","current_component_context","_a","set","current_reaction","is_runes","e.state_unsafe_mutation","increment_version","mark_reactions","current_effect","new_deps","set_signal_status","schedule_effect","current_untracked_writes","set_current_untracked_writes","signal","status","reactions","runes","length","reaction","flags","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_IS_CONTROLLED","EACH_IS_ANIMATED","EACH_ITEM_IMMUTABLE","PROPS_IS_IMMUTABLE","PROPS_IS_RUNES","PROPS_IS_UPDATED","PROPS_IS_BINDABLE","PROPS_IS_LAZY_INITIAL","TEMPLATE_FRAGMENT","TEMPLATE_USE_IMPORT_NODE","UNINITIALIZED","hydrating","proxy","parent","prev","metadata","prototype","state_proxy_handler","update_version","d","target","prop","descriptor","boolean","ls","receiver","get","has","untrack","not_has","get_proxied_value","is","$window","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","create_text","get_first_child","node","get_next_sibling","child","first_child","fragment","is_text","first","sibling","clear_text_content","validate_effect","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","push_effect","effect","parent_effect","parent_last","create_effect","type","fn","sync","push","is_root","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","update_effect","e","destroy_effect","inert","user_effect","defer","context","effect_root","render_effect","template_effect","block","branch","execute_effect_teardown","teardown","previously_destroying_effect","previous_reaction","set_is_destroying_effect","set_current_reaction","remove_dom","removed","end","next","destroy_effect_children","remove_reactions","transitions","transition","unlink_effect","pause_effect","callback","pause_children","run_out_transitions","remaining","check","local","transparent","resume_effect","resume_children","check_dirtiness","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","queue_micro_task","derived","current_derived","derived_safe_equal","destroy_derived_children","deriveds","destroy_derived","update_derived","update_reaction","current_skip_reaction","lifecycle_outside_component","name","current_queued_root_effects","flush_count","skipped_deps","current_version","dependencies","is_unowned","dependency","_b","handle_error","error","component_context","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","result","deps","remove_reaction","index","new_length","start_index","previous_effect","previous_component_context","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","flush_queued_effects","collected_effects","process_effects","effects","process_deferred","previous_queued_root_effects","main_loop","is_active","is_branch","is_clean","parent_sibling","STATUS_MASK","getContext","get_or_init_context_map","setContext","get_parent_context","context_map","props","pop","component","context_stack_item","all_registered_events","root_event_handles","delegate","events","handle_event_propagation","event","handler_element","owner_document","event_name","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","data","create_fragment_from_html","html","elem","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","clone","text","t","append","anchor","dom","PASSIVE_EVENTS","is_passive_event","set_text","mount","options","_mount","document_listeners","Component","intro","registered_events","event_handle","passive","n","unmount","ctx","mounted_components","snapshot","skip_warning","cloned","paths","unwrapped","copy","if_block","get_condition","consequent_fn","alternate_fn","elseif","consequent_effect","alternate_effect","condition","current_each_item","_","pause_effects","state","items","controlled_anchor","items_map","is_controlled","parent_node","link","item","each","get_collection","get_key","render_fn","fallback_fn","fallback","collection","array","reconcile","is_animated","should_update","current","seen","to_animate","matched","stashed","child_anchor","create_item","update_item","j","move","to_destroy","destroy_length","_c","_d","previous_each_item","reactive","mutable","dest","next_node","get_component","listening_to_form_reset","add_form_reset_listener","evt","set_value","element","attributes","set_attribute","attribute","listen_to_event_and_reset_event","handler","on_reset","bind_checked","input","get_value","update","select_option","select","mounting","select_options","option","option_value","get_option_value","init_select","observer","bind_select_value","selected_option","immutable","bindable","lazy","prop_value","setter","fallback_value","fallback_dirty","get_fallback","e.props_invalid_value","getter","derived_getter","legacy_parent","mutation","from_child","inner_current_value","current_value","parent_value","child_value","new_value","PUBLIC_VERSION","serialize","stringifyReplacer","deserialize","parseReviver","getLocalStorageKey","svecklistid","body","portalUrl","basePath","LocalStore","__publicField","__privateGet","_value","$.proxy","$.snapshot","checked","weight","mode","fillItem","editItem","removeItem","$.if","$$anchor","node_1","node_2","node_3","node_4","node_5","node_6","node_7","localStorageKey","checklist","componentTypes","Checkbox","Textfield","targetEl","getCheckedDataForIndex","getTextDataForIndex","$.each","box","$.derived","$.get","$$component","addItem","boxes","selected","$.source","$.set","itemIdx","loadDataFromLocalStorage","option_1_value","option_1","$.set_text","$.bind_select_value","$$value","App"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}